--------------------------------
Banner Grabbing
--------------------------------

Netcat
------
nc -nv [IP] [Ports]
-n = IP will be used.
-v = Verbose output.

Dmitry
------
dmitry -pb [IP]
-p = TCP scanning will take place.
-b = Grab banners when connected to each port.

Nmap NSE
--------
nmap -sT [IP] -p [Ports] --script=banner
--script=banner = Use the banner grabbing script.

Amap
----
amap -B [IP] [Ports]
-B = Run in banner grabbing mode.

---------------------------------------------------------------------------

--------------------------------
Service Identification
--------------------------------

Nmap
----
nmap [IP] -p [Ports] -sV
-sV = Service scan will be conducted.

Amap
----
amap [IP] [Ports]
-q can be used to suppress info about unidentified ports.
-b can be used for banner grabbing.
-1 can be used to stop scanning a port once a signature has been found.

----------------------------------------------------------------------------------------------------

--------------------------------
Operating System Identification
--------------------------------

Scapy
-----
Craft an IP() and set it's dst, then craft an ICMP(), stack and send, analyze the response,
if the TTL <= 64 then the target runs a Linux/Unix based OS, if greater then the system runs Windows.

Nmap
----
nmap [IP] -O
-O = OS identification scan will be held.

xprobe2
-------
xprobe2 [IP]

p0f
---
p0f can be used for passive OS scanning.
First, use ettercap to direct all the data between a specific machine and the gateway through your machine:

ettercap -M arp:remote /[Gateway-IP]/ /[Target-IP]/ -T -w [File name]
-M = Specify the mode (which is arp:remote in this case).
-T = Operation will be conducted in text mode.
-w = Used when data dumping is desired, followed by the file name.

Then, run p0f:
p0f

-------------------------------------------------------------------------------------------------------

--------------------------------
SNMP Analysis
--------------------------------

Onesixtyone
-----------
onesixtyone [IP] public
public = Community string used to query the system for it's system description.

SNMPwalk
--------
snmpwalk [IP] -c public -v 2c
-c = Community string.
-v = SNMP version.

-------------------------------------------------------------------------------------------------------

--------------------------------
Firewall Identification
--------------------------------

Scapy
-----
Craft an IP() and set it's dst, A TCP() SYN packet, and a TCP() ACK packet, set the TCP() dports to the same port number, then stack and send the packets and analyse the response, possible scenarios follow:

1 - If no response is received from both requests, then the host is down or the port is unstatefully filtered.
2 - If a response is received from one of the requests but not both, then the port is statefully filtered.
3 - If responses were revceived from both requests, then no firewall exists.

If responses are recieved:

1 - If SYN+ACK are received, then the port is open.

(To be continued)

Nmap
----
nmap -sA [IP] -p [Ports]
-sA = Firewall scan will be conducted on the specified port.

Metasploit
----------
msf > use auxiliary/scanner/portscan/ack
Set PORTS, RHOSTS, INTERFACE and THREADS, then "run".